class Solution {
public:
    int coinChange(vector<int>& coins, int amt) {
        int n=coins.size();
        
        vector<vector<int>>t(n+1,vector<int>(amt+1,INT_MAX-1));
        for(int i=0;i<=n;i++){
            for(int j=0;j<=amt;j++){
                if(i==0)t[i][j]=INT_MAX-1;
                if(j==0)t[i][j]=0;
                
            }
            for(int j=1;j<=amt;j++){
                if(j%coins[0]==0)t[i][j]=j/coins[0];
                else t[i][j]=INT_MAX-1;
            }
            
            //initialization of dp
        }

        //populating the dp
        
        for(int i=2;i<=n;i++){
            for(int j=1;j<=amt;j++){
                if(coins[i-1]<=j){
                    t[i][j]=min(t[i][j-coins[i-1]]+1,t[i-1][j]);
                }
                else t[i][j]=t[i-1][j];
            }
        }
        return t[n][amt]==INT_MAX-1?-1:t[n][amt];
    }
};
